size : data 5
arr : data 9
data 8
data 1
data 10
data 0
adj 0x000fff ;sp is set to const
main : ldc 0
ldc 0 ;B = 0 A = 0
stl 0 ;SP+0 is i
ldc size
ldnl 0 ;A has n
adc -1 ;A = n - 1
stl 1 ;SP+1 is n - 1
outer_loop : ldl 1
ldl 0 ;n -1 , i
sub ;n -1 , n- 1-i
brlz outer_exit
ldc 0 ;n - 1 - i , 0
stl 2 ;SP+2 is j n -1 - i , n -1 - i
stl 3 ;SP + 3 is n - i - 1
inner_loop : ldl 3
ldl 2 ;n - i -1 , j
sub ;n - i -1 , n -1 - i - j
brlz inner_loop_exit
ldc arr
ldl 2 ;arr , j
add ;arr , arr + j
ldnl 0 ;arr , a[j]
stl 4 ;SP+4 is a[j] arr , arr
ldl 2 ;arr , j
add ;arr , arr + j
ldnl 1 ;arr , a[j + 1]
stl 5 ;SP+5 is a[j + 1]
ldl 4
ldl 5 ;a[j] , a[j + 1]
sub ;a[j] , a[j] - a[j + 1]
brlz no_swap
ldc arr
ldl 2 ;arr , j
add ;arr ,arr + j
stl 6 ;SP+6 has add of a[j]
ldl 5
ldl 6 ; a[j + 1] , &a[j]
stnl 0
ldl 4
ldl 6
stnl 1
no_swap : ldl 2 ;a = j
adc 1
sp2a ;j + 1 , sp
stnl 2
br inner_loop
inner_loop_exit : ldl 0 ;a = i we increment here i++
adc 1
sp2a ;i + 1 , sp
stnl 0
br outer_loop
outer_exit : HALT
